{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Baskito App API",
    "description": "API for managing categories and products in the Baskito App",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:4000",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "API for managing users"
    },
    {
      "name": "Categories",
      "description": "API for managing categories"
    },
    {
      "name": "Products",
      "description": "API for managing products"
    },
    {
      "name": "RelatedProducts",
      "description": "API for managing Related Products"
    },
    {
      "name": "Sliders",
      "description": "API for managing Sliders"
    },
    {
      "name": "Carts",
      "description": "API for managing Carts"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object for registration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          },
          "400": {
            "description": "Error during registration"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/category": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Retrieve all categories",
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "required": false,
            "description": "Filter categories by name",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of items per page",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of categories",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "parameters": [
          {
            "name": "categoryName",
            "in": "formData",
            "description": "Name of the category",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryDescription",
            "in": "formData",
            "description": "Description of the category",
            "type": "string"
          },
          {
            "name": "categoryImage",
            "in": "formData",
            "description": "Image of the category",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Category created successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      }
    },
    "/api/category/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the category",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Retrieve a category by ID",
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update a category by ID",
        "parameters": [
          {
            "name": "categoryName",
            "in": "formData",
            "description": "Name of the category",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryDescription",
            "in": "formData",
            "description": "Description of the category",
            "type": "string"
          },
          {
            "name": "categoryImage",
            "in": "formData",
            "description": "Image of the category",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category by ID",
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      }
    },
    "/api/product": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve all products",
        "parameters": [
          {
            "name": "productName",
            "in": "query",
            "required": false,
            "description": "Filter products by name",
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "description": "Filter products by category ID",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of items per page",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of products",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "parameters": [
          {
            "name": "productName",
            "in": "formData",
            "description": "Name of the product",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "formData",
            "description": "ID of the category",
            "required": true,
            "type": "string"
          },
          {
            "name": "productShortDescription",
            "in": "formData",
            "description": "Short description of the product",
            "required": true,
            "type": "string"
          },
          {
            "name": "productDescription",
            "in": "formData",
            "description": "Detailed description of the product",
            "type": "string"
          },
          {
            "name": "productPrice",
            "in": "formData",
            "description": "Price of the product",
            "required": true,
            "type": "number"
          },
          {
            "name": "productSalePrice",
            "in": "formData",
            "description": "Sale price of the product",
            "required": true,
            "type": "number"
          },
          {
            "name": "productImage",
            "in": "formData",
            "description": "Image of the product",
            "type": "file"
          },
          {
            "name": "productSKU",
            "in": "formData",
            "description": "SKU of the product",
            "type": "string"
          },
          {
            "name": "productQuantity",
            "in": "formData",
            "description": "Available quantity of the product",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Product created successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      }
    },
    "/api/product/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the product",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve a product by ID",
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product by ID",
        "parameters": [
          {
            "name": "productName",
            "in": "formData",
            "description": "Name of the product",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "formData",
            "description": "ID of the category",
            "required": true,
            "type": "string"
          },
          {
            "name": "productShortDescription",
            "in": "formData",
            "description": "Short description of the product",
            "required": true,
            "type": "string"
          },
          {
            "name": "productDescription",
            "in": "formData",
            "description": "Detailed description of the product",
            "type": "string"
          },
          {
            "name": "productPrice",
            "in": "formData",
            "description": "Price of the product",
            "required": true,
            "type": "number"
          },
          {
            "name": "productSalePrice",
            "in": "formData",
            "description": "Sale price of the product",
            "required": true,
            "type": "number"
          },
          {
            "name": "productImage",
            "in": "formData",
            "description": "Image of the product",
            "type": "file"
          },
          {
            "name": "productSKU",
            "in": "formData",
            "description": "SKU of the product",
            "type": "string"
          },
          {
            "name": "productQuantity",
            "in": "formData",
            "description": "Available quantity of the product",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product by ID",
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      }
    },
    "/api/relatedProduct": {
      "post": {
        "tags": [
          "RelatedProducts"
        ],
        "summary": "Create a related product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Object containing IDs of the primary and related products",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Product": {
                  "type": "string",
                  "description": "ID of the primary product"
                },
                "relatedProduct": {
                  "type": "string",
                  "description": "ID of the related product"
                }
              },
              "required": [
                "Product",
                "relatedProduct"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Related product created successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/relatedProduct/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the related product",
          "type": "string"
        }
      ],
      "delete": {
        "tags": [
          "RelatedProducts"
        ],
        "summary": "Delete a related product",
        "responses": {
          "200": {
            "description": "Related product deleted successfully"
          },
          "404": {
            "description": "Related product not found"
          }
        }
      }
    },
    "/api/slider": {
      "get": {
        "tags": [
          "Sliders"
        ],
        "summary": "Retrieve all sliders",
        "parameters": [
          {
            "name": "sliderName",
            "in": "query",
            "required": false,
            "description": "Filter sliders by name",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of items per page",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of sliders",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sliders"
        ],
        "summary": "Create a new slider",
        "parameters": [
          {
            "name": "sliderName",
            "in": "formData",
            "description": "Name of the slider",
            "required": true,
            "type": "string"
          },
          {
            "name": "sliderDescription",
            "in": "formData",
            "description": "Description of the slider",
            "type": "string"
          },
          {
            "name": "sliderUrl",
            "in": "formData",
            "description": "URL for the slider",
            "type": "string"
          },
          {
            "name": "sliderImage",
            "in": "formData",
            "description": "Image for the slider",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Slider created successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      }
    },
    "/api/slider/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the slider",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Sliders"
        ],
        "summary": "Retrieve a slider by ID",
        "responses": {
          "200": {
            "description": "Slider details",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sliders"
        ],
        "summary": "Update a slider by ID",
        "parameters": [
          {
            "name": "sliderName",
            "in": "formData",
            "description": "Name of the slider",
            "required": true,
            "type": "string"
          },
          {
            "name": "sliderDescription",
            "in": "formData",
            "description": "Description of the slider",
            "type": "string"
          },
          {
            "name": "sliderUrl",
            "in": "formData",
            "description": "URL for the slider",
            "type": "string"
          },
          {
            "name": "sliderImage",
            "in": "formData",
            "description": "Image for the slider",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Slider updated successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sliders"
        ],
        "summary": "Delete a slider by ID",
        "responses": {
          "200": {
            "description": "Slider deleted successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          }
        }
      }
    },
    "/api/cart": {
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Add products to the cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "products",
            "in": "body",
            "description": "Array of products to add to the cart",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "ID of the product"
                      },
                      "qty": {
                        "type": "integer",
                        "description": "Quantity of the product to add"
                      }
                    },
                    "required": [
                      "product",
                      "qty"
                    ]
                  }
                }
              },
              "required": [
                "products"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products added to cart successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized access. You must be logged in."
          },
          "403": {
            "description": "Forbidden. No token provided."
          },
          "500": {
            "description": "Internal Server Error. Check the server logs for details."
          }
        }
      },
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Retrieve the user's cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the cart",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          },
          "401": {
            "description": "Unauthorized access. You must be logged in."
          },
          "403": {
            "description": "Forbidden. No token provided."
          },
          "500": {
            "description": "Internal Server Error. Check the server logs for details."
          }
        }
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Remove products from the cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "products",
            "in": "body",
            "description": "Array of products to remove from the cart",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "ID of the product"
                      }
                    },
                    "required": [
                      "product"
                    ]
                  }
                }
              },
              "required": [
                "products"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products removed from cart successfully",
            "schema": {
              "$ref": "#/definitions/ServiceResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized access. You must be logged in."
          },
          "403": {
            "description": "Forbidden. No token provided."
          },
          "500": {
            "description": "Internal Server Error. Check the server logs for details."
          }
        }
      }
    }
  },
  "definitions": {
    "ServiceResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "UserRegister": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string",
          "description": "Full name of the user"
        },
        "email": {
          "type": "string",
          "description": "Email address of the user"
        },
        "password": {
          "type": "string",
          "description": "Password for the user"
        }
      },
      "required": [
        "fullName",
        "email",
        "password"
      ]
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the user"
        },
        "password": {
          "type": "string",
          "description": "Password for the user"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category"
        },
        "categoryName": {
          "type": "string",
          "description": "Name of the category"
        },
        "categoryDescription": {
          "type": "string",
          "description": "Description of the category"
        },
        "categoryImage": {
          "type": "string",
          "description": "Image URL for the category"
        }
      },
      "required": [
        "categoryName"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Unique identifier for the product"
        },
        "productName": {
          "type": "string",
          "description": "Name of the product"
        },
        "category": {
          "type": "string",
          "description": "Category ID the product belongs to"
        },
        "productShortDescription": {
          "type": "string",
          "description": "Short description of the product"
        },
        "productDescription": {
          "type": "string",
          "description": "Detailed description of the product"
        },
        "productPrice": {
          "type": "number",
          "description": "Price of the product"
        },
        "productSalePrice": {
          "type": "number",
          "description": "Sale price of the product",
          "default": 0
        },
        "productImage": {
          "type": "string",
          "description": "Image URL for the product"
        },
        "productSKU": {
          "type": "string",
          "description": "Stock Keeping Unit (SKU) for the product"
        },
        "productType": {
          "type": "string",
          "description": "Type of the product",
          "default": "simple"
        },
        "stockStatus": {
          "type": "string",
          "description": "Stock status of the product",
          "default": "IN"
        },
        "relatedProducts": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Related product IDs"
          }
        }
      },
      "required": [
        "productName",
        "category",
        "productShortDescription",
        "productPrice",
        "productSalePrice"
      ]
    },
    "RelatedProducts": {
      "type": "object",
      "properties": {
        "product": {
          "type": "string",
          "description": "ID of the product"
        },
        "relatedProduct": {
          "type": "string",
          "description": "ID of the related product"
        }
      },
      "required": [
        "product",
        "relatedProduct"
      ]
    },
    "Slider": {
      "type": "object",
      "properties": {
        "sliderName": {
          "type": "string",
          "description": "Name of the slider",
          "example": "Summer Sale"
        },
        "sliderDescription": {
          "type": "string",
          "description": "Description of the slider",
          "example": "Get the best deals this summer!"
        },
        "sliderUrl": {
          "type": "string",
          "description": "URL for the slider",
          "example": "https://example.com/summer-sale"
        },
        "sliderImage": {
          "type": "string",
          "description": "Image URL for the slider",
          "example": "https://example.com/images/summer-sale.jpg"
        }
      },
      "required": [
        "sliderName",
        "sliderImage"
      ]
    },
    "Cart": {
      "type": "object",
      "properties": {
        "cartId": {
          "type": "string",
          "description": "The unique identifier for the cart.",
          "example": "60f5a15b8b1e3a001c8e4d0d"
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns the cart.",
          "example": "12345"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "product": {
                "type": "string",
                "description": "The ID of the product.",
                "example": "60f5a15b8b1e3a001c8e4d0e"
              },
              "qty": {
                "type": "integer",
                "description": "The quantity of the product in the cart.",
                "example": 2
              }
            }
          }
        }
      },
      "required": [
        "userId",
        "products"
      ]
    }
  }
}